---
# tasks/connect_api.yml file for role_nutanix_prism_api
- name: Generate basic authorization string
  ansible.builtin.set_fact:
    role_nutanix_prism_api_auth_string: "{{ role_nutanix_prism_api_host_username }}:{{ role_nutanix_prism_api_host_password }}"
  no_log: true
  when:
    - role_nutanix_prism_api_host_username is defined
    - role_nutanix_prism_api_host_username != ""
    - role_nutanix_prism_api_host_password is defined
    - role_nutanix_prism_api_host_password != ""

- name: Generate authorization header
  ansible.builtin.set_fact:
    role_nutanix_prism_api_auth_string_b64: "Basic {{ role_nutanix_prism_api_auth_string | b64encode(encoding='ascii') }}"
  no_log: true
  when: role_nutanix_prism_api_auth_string is defined

- name: Unset basic authorization string
  ansible.builtin.set_fact:
    role_nutanix_prism_api_auth_string: ""
  no_log: true
  when: role_nutanix_prism_api_auth_string is defined

- name: Unset basic authorization string
  ansible.builtin.set_fact:
    role_nutanix_prism_api_url_base: "{{ role_nutanix_prism_api_host }}:{{ role_nutanix_prism_api_host_port }}"

- name: Test logon to API
  ansible.builtin.uri:
    url: "https://{{ role_nutanix_prism_api_url_base }}/api/nutanix/v3/users/me"
    method: GET
    validate_certs: "{{ role_nutanix_prism_api_host_validate_certs }}"
    body_format: json
    headers:
      Authorization: "{{ role_nutanix_prism_api_auth_string_b64 }}"
    status_code: 200
    return_content: true
  register: role_nutanix_prism_api_login_test
  ignore_errors: false

- name: Debug role_nutanix_prism_api_login_test
  ansible.builtin.debug:
    var: role_nutanix_prism_api_login_test
  when: role_nutanix_prism_api_debug

- name: Set Prism endpoint type
  ansible.builtin.set_fact:
    role_nutanix_prism_api_endpoint_type: "{{ role_nutanix_prism_api_login_test.x_ntnx_env }}"

- name: Debug role_nutanix_prism_api_endpoint_type
  ansible.builtin.debug:
    var: role_nutanix_prism_api_endpoint_type
  when: role_nutanix_prism_api_debug
